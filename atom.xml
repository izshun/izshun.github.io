<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zshun&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://izshun.github.io/"/>
  <updated>2020-02-16T12:56:44.080Z</updated>
  <id>https://izshun.github.io/</id>
  
  <author>
    <name>zshun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>采用 K-Means 聚类算法分析 GPS 轨迹</title>
    <link href="https://izshun.github.io/2020/02/14/%E9%87%87%E7%94%A8%20K-Means%20%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%20GPS%20%E8%BD%A8%E8%BF%B9/"/>
    <id>https://izshun.github.io/2020/02/14/%E9%87%87%E7%94%A8%20K-Means%20%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%20GPS%20%E8%BD%A8%E8%BF%B9/</id>
    <published>2020-02-14T02:20:21.451Z</published>
    <updated>2020-02-16T12:56:44.080Z</updated>
    
    <content type="html"><![CDATA[<p>数据集来源<a href="https://www.microsoft.com/en-us/download/details.aspx?id=52367" target="_blank" rel="noopener">Geolife</a></p><h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span>  matplotlib.colors <span class="keyword">import</span>  rgb2hex</span><br><span class="line"><span class="keyword">from</span> shapely.geometry <span class="keyword">import</span> MultiPoint</span><br><span class="line"><span class="keyword">from</span> geopy.distance <span class="keyword">import</span> great_circle</span><br><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> DBSCAN</span><br><span class="line">userdata = <span class="string">'d:/Lab-work/Geolife Trajectories 1.3/Data/001/Trajectory/'</span></span><br><span class="line">filelist = os.listdir(userdata)</span><br><span class="line">names = [<span class="string">'lat'</span>,<span class="string">'lng'</span>,<span class="string">'zero'</span>,<span class="string">'alt'</span>,<span class="string">'days'</span>,<span class="string">'date'</span>,<span class="string">'time'</span>]</span><br><span class="line">df_list = [pd.read_csv(userdata + f,header=<span class="number">6</span>,names=names,index_col=<span class="literal">False</span>) <span class="keyword">for</span> f <span class="keyword">in</span> filelist]  </span><br><span class="line">df = pd.concat(df_list, ignore_index=<span class="literal">True</span>)</span><br><span class="line">print(df.head(<span class="number">10</span>))</span><br><span class="line">plt.plot(df.lat, df.lng)</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">         lat         lng  zero  alt          days        <span class="built_in">date</span>      <span class="built_in">time</span></span><br><span class="line"><span class="number">0</span>  <span class="number">39</span>.<span class="number">984198</span>  <span class="number">116</span>.<span class="number">319322</span>     <span class="number">0</span>  <span class="number">492</span>  <span class="number">39744</span>.<span class="number">245208</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">06</span></span><br><span class="line"><span class="number">1</span>  <span class="number">39</span>.<span class="number">984224</span>  <span class="number">116</span>.<span class="number">319402</span>     <span class="number">0</span>  <span class="number">492</span>  <span class="number">39744</span>.<span class="number">245266</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">11</span></span><br><span class="line"><span class="number">2</span>  <span class="number">39</span>.<span class="number">984211</span>  <span class="number">116</span>.<span class="number">319389</span>     <span class="number">0</span>  <span class="number">492</span>  <span class="number">39744</span>.<span class="number">245324</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">16</span></span><br><span class="line"><span class="number">3</span>  <span class="number">39</span>.<span class="number">984217</span>  <span class="number">116</span>.<span class="number">319422</span>     <span class="number">0</span>  <span class="number">491</span>  <span class="number">39744</span>.<span class="number">245382</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">21</span></span><br><span class="line"><span class="number">4</span>  <span class="number">39</span>.<span class="number">984710</span>  <span class="number">116</span>.<span class="number">319865</span>     <span class="number">0</span>  <span class="number">320</span>  <span class="number">39744</span>.<span class="number">245405</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">23</span></span><br><span class="line"><span class="number">5</span>  <span class="number">39</span>.<span class="number">984674</span>  <span class="number">116</span>.<span class="number">319810</span>     <span class="number">0</span>  <span class="number">325</span>  <span class="number">39744</span>.<span class="number">245463</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">28</span></span><br><span class="line"><span class="number">6</span>  <span class="number">39</span>.<span class="number">984623</span>  <span class="number">116</span>.<span class="number">319773</span>     <span class="number">0</span>  <span class="number">326</span>  <span class="number">39744</span>.<span class="number">245521</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">33</span></span><br><span class="line"><span class="number">7</span>  <span class="number">39</span>.<span class="number">984606</span>  <span class="number">116</span>.<span class="number">319732</span>     <span class="number">0</span>  <span class="number">327</span>  <span class="number">39744</span>.<span class="number">245579</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">38</span></span><br><span class="line"><span class="number">8</span>  <span class="number">39</span>.<span class="number">984555</span>  <span class="number">116</span>.<span class="number">319728</span>     <span class="number">0</span>  <span class="number">324</span>  <span class="number">39744</span>.<span class="number">245637</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">43</span></span><br><span class="line"><span class="number">9</span>  <span class="number">39</span>.<span class="number">984579</span>  <span class="number">116</span>.<span class="number">319769</span>     <span class="number">0</span>  <span class="number">309</span>  <span class="number">39744</span>.<span class="number">245694</span>  <span class="number">2008</span>-<span class="number">10</span>-<span class="number">23</span>  <span class="number">05</span>:<span class="number">53</span>:<span class="number">48</span></span><br><span class="line">[&lt;matplotlib.lines.Line2D <span class="built_in">at</span> <span class="number">0</span>x17efc43eac8&gt;]</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2020/02/16/39eBMn.png" alt="39eBMn.png" title="">                </div>                <div class="image-caption">39eBMn.png</div>            </figure><h2 id="K-Means"><a href="#K-Means" class="headerlink" title="K-Means"></a>K-Means</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">coords = df[[<span class="string">'lat'</span>,<span class="string">'lng'</span>]].values</span><br><span class="line">n_clusters = <span class="number">100</span></span><br><span class="line">cls = KMeans(n_clusters).fit(coords)</span><br><span class="line">colors = tuple([(np.random.random(),np.random.random(), np.random.random()) <span class="keyword">for</span> i <span class="keyword">in</span> range(n_clusters)])</span><br><span class="line">colors = [rgb2hex(x) <span class="keyword">for</span> x <span class="keyword">in</span> colors]</span><br><span class="line"><span class="keyword">for</span> i, color <span class="keyword">in</span> enumerate(colors):</span><br><span class="line">  members = cls.labels_ == i</span><br><span class="line">  plt.scatter(coords[members, <span class="number">0</span>], coords[members, <span class="number">1</span>], s=<span class="number">60</span>, c=color, alpha=<span class="number">0.5</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2020/02/16/39mlYF.png" alt="39mlYF.png" title="">                </div>                <div class="image-caption">39mlYF.png</div>            </figure><h3 id="获取-K-Means-聚类结果"><a href="#获取-K-Means-聚类结果" class="headerlink" title="获取 K-Means 聚类结果"></a>获取 K-Means 聚类结果</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cluster_labels = cls.labels_</span><br><span class="line">num_clusters = len(set(cluster_labels) - set([<span class="number">-1</span>]))</span><br><span class="line">print(<span class="string">'Clustered '</span> + str(len(df_min)) + <span class="string">' points to '</span> + str(num_clusters) + <span class="string">' clusters'</span>)</span><br><span class="line">clusters = pd.Series([coords[cluster_labels == n] <span class="keyword">for</span> n <span class="keyword">in</span> range(num_clusters)])</span><br><span class="line">print(clusters)</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Clustered <span class="number">9045</span> points to <span class="number">100</span> clusters</span><br><span class="line"><span class="number">0</span>     [[<span class="number">40</span>.<span class="number">014459</span>, <span class="number">116</span>.<span class="number">305603</span>], [<span class="number">40</span>.<span class="number">014363</span>, <span class="number">116</span>.<span class="number">3056</span>...</span><br><span class="line"><span class="number">1</span>     [[<span class="number">39</span>.<span class="number">975246000000006</span>, <span class="number">116</span>.<span class="number">358976</span>], [<span class="number">39</span>.<span class="number">975244</span>,...</span><br><span class="line"><span class="number">2</span>     [[<span class="number">40</span>.<span class="number">001312</span>, <span class="number">116</span>.<span class="number">193358</span>], [<span class="number">40</span>.<span class="number">001351</span>, <span class="number">116</span>.<span class="number">1932</span>...</span><br><span class="line"><span class="number">3</span>     [[<span class="number">39</span>.<span class="number">984559000000004</span>, <span class="number">116</span>.<span class="number">326696</span>], [<span class="number">39</span>.<span class="number">984669</span>,...</span><br><span class="line"><span class="number">4</span>     [[<span class="number">39</span>.<span class="number">964969</span>, <span class="number">116</span>.<span class="number">434923</span>], [<span class="number">39</span>.<span class="number">964886</span>, <span class="number">116</span>.<span class="number">4350</span>...</span><br><span class="line">                            ...                        </span><br><span class="line"><span class="number">95</span>    [[<span class="number">40</span>.<span class="number">004549</span>, <span class="number">116</span>.<span class="number">260581</span>], [<span class="number">40</span>.<span class="number">004515999999995</span>,...</span><br><span class="line"><span class="number">96</span>    [[<span class="number">39</span>.<span class="number">97964</span>, <span class="number">116</span>.<span class="number">323856</span>], [<span class="number">39</span>.<span class="number">979701</span>, <span class="number">116</span>.<span class="number">32396</span>...</span><br><span class="line"><span class="number">97</span>    [[<span class="number">40</span>.<span class="number">0009</span>, <span class="number">116</span>.<span class="number">23948500000002</span>], [<span class="number">40</span>.<span class="number">000831</span>, <span class="number">11</span>...</span><br><span class="line"><span class="number">98</span>    [[<span class="number">39</span>.<span class="number">962336</span>, <span class="number">116</span>.<span class="number">32817800000001</span>], [<span class="number">39</span>.<span class="number">96223300</span>...</span><br><span class="line"><span class="number">99</span>    [[<span class="number">39</span>.<span class="number">9663</span>, <span class="number">116</span>.<span class="number">353677</span>], [<span class="number">39</span>.<span class="number">966291999999996</span>, <span class="number">1</span>...</span><br><span class="line"><span class="function">Length: 100, <span class="title">dtype</span>: <span class="title">object</span></span></span><br></pre></td></tr></table></figure><h3 id="获取每个群集每个中心点"><a href="#获取每个群集每个中心点" class="headerlink" title="获取每个群集每个中心点"></a>获取每个群集每个中心点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_centermost_point</span><span class="params">(cluster)</span>:</span></span><br><span class="line">    centroid = (MultiPoint(cluster).centroid.x, MultiPoint(cluster).centroid.y)</span><br><span class="line">    centermost_point = min(cluster, key=<span class="keyword">lambda</span> point: great_circle(point, centroid).m)</span><br><span class="line">    <span class="keyword">return</span> tuple(centermost_point)</span><br><span class="line">centermost_points = clusters.map(get_centermost_point)</span><br><span class="line">lats, lons = zip(*centermost_points)</span><br><span class="line">rep_points = pd.DataFrame(&#123;<span class="string">'lon'</span>:lons, <span class="string">'lat'</span>:lats&#125;)</span><br><span class="line">print(rep_points)</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">           lon        lat</span><br><span class="line"><span class="number">0</span>   <span class="number">116</span>.<span class="number">306558</span>  <span class="number">40</span>.<span class="number">013751</span></span><br><span class="line"><span class="number">1</span>   <span class="number">116</span>.<span class="number">353295</span>  <span class="number">39</span>.<span class="number">975357</span></span><br><span class="line"><span class="number">2</span>   <span class="number">116</span>.<span class="number">190167</span>  <span class="number">40</span>.<span class="number">004290</span></span><br><span class="line"><span class="number">3</span>   <span class="number">116</span>.<span class="number">326944</span>  <span class="number">39</span>.<span class="number">986492</span></span><br><span class="line"><span class="number">4</span>   <span class="number">116</span>.<span class="number">438241</span>  <span class="number">39</span>.<span class="number">961273</span></span><br><span class="line">..         ...        ...</span><br><span class="line"><span class="number">95</span>  <span class="number">116</span>.<span class="number">256309</span>  <span class="number">40</span>.<span class="number">004774</span></span><br><span class="line"><span class="number">96</span>  <span class="number">116</span>.<span class="number">326462</span>  <span class="number">39</span>.<span class="number">978752</span></span><br><span class="line"><span class="number">97</span>  <span class="number">116</span>.<span class="number">232672</span>  <span class="number">39</span>.<span class="number">998630</span></span><br><span class="line"><span class="number">98</span>  <span class="number">116</span>.<span class="number">328847</span>  <span class="number">39</span>.<span class="number">958271</span></span><br><span class="line"><span class="number">99</span>  <span class="number">116</span>.<span class="number">358655</span>  <span class="number">39</span>.<span class="number">966451</span></span><br><span class="line"></span><br><span class="line">[<span class="number">100</span> rows x <span class="number">2</span> columns]</span><br></pre></td></tr></table></figure><h3 id="描绘中心点"><a href="#描绘中心点" class="headerlink" title="描绘中心点"></a>描绘中心点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">fig, ax = plt.subplots(figsize=[<span class="number">10</span>, <span class="number">6</span>])</span><br><span class="line">rs_scatter = ax.scatter(rep_points[<span class="string">'lon'</span>][<span class="number">0</span>], rep_points[<span class="string">'lat'</span>][<span class="number">0</span>], c=<span class="string">'#99cc99'</span>, edgecolor=<span class="string">'None'</span>, alpha=<span class="number">0.7</span>, s=<span class="number">450</span>)</span><br><span class="line">ax.scatter(rep_points[<span class="string">'lon'</span>][<span class="number">1</span>], rep_points[<span class="string">'lat'</span>][<span class="number">1</span>], c=<span class="string">'#99cc99'</span>, edgecolor=<span class="string">'None'</span>, alpha=<span class="number">0.7</span>, s=<span class="number">250</span>)</span><br><span class="line">ax.scatter(rep_points[<span class="string">'lon'</span>][<span class="number">2</span>], rep_points[<span class="string">'lat'</span>][<span class="number">2</span>], c=<span class="string">'#99cc99'</span>, edgecolor=<span class="string">'None'</span>, alpha=<span class="number">0.7</span>, s=<span class="number">250</span>)</span><br><span class="line">ax.scatter(rep_points[<span class="string">'lon'</span>][<span class="number">3</span>], rep_points[<span class="string">'lat'</span>][<span class="number">3</span>], c=<span class="string">'#99cc99'</span>, edgecolor=<span class="string">'None'</span>, alpha=<span class="number">0.7</span>, s=<span class="number">150</span>)</span><br><span class="line">df_scatter = ax.scatter(df_min[<span class="string">'lng'</span>], df_min[<span class="string">'lat'</span>], c=<span class="string">'k'</span>, alpha=<span class="number">0.9</span>, s=<span class="number">3</span>)</span><br><span class="line">ax.set_title(<span class="string">'Full GPS trace vs. DBSCAN clusters'</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">'Longitude'</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">'Latitude'</span>)</span><br><span class="line">ax.legend([df_scatter, rs_scatter], [<span class="string">'GPS points'</span>, <span class="string">'Cluster centers'</span>], loc=<span class="string">'upper right'</span>)</span><br><span class="line">labels = [<span class="string">'cluster&#123;0&#125;'</span>.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, num_clusters+<span class="number">1</span>)]</span><br><span class="line"><span class="keyword">for</span> label, x, y <span class="keyword">in</span> zip(labels, rep_points[<span class="string">'lon'</span>], rep_points[<span class="string">'lat'</span>]):</span><br><span class="line">    plt.annotate(                                                </span><br><span class="line">        label,</span><br><span class="line">        xy = (x, y), xytext = (<span class="number">-25</span>, <span class="number">-30</span>),</span><br><span class="line">        textcoords = <span class="string">'offset points'</span>, ha = <span class="string">'right'</span>, va = <span class="string">'bottom'</span>,</span><br><span class="line">        bbox = dict(boxstyle = <span class="string">'round,pad=0.5'</span>, fc = <span class="string">'white'</span>, alpha = <span class="number">0.5</span>),</span><br><span class="line">        arrowprops = dict(arrowstyle = <span class="string">'-&gt;'</span>, connectionstyle = <span class="string">'arc3,rad=0'</span>))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s2.ax1x.com/2020/02/16/39n7CD.png" alt="39n7CD.png" title="">                </div>                <div class="image-caption">39n7CD.png</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;数据集来源&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=52367&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Geolife&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;加载数据
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://izshun.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="聚类" scheme="https://izshun.github.io/tags/%E8%81%9A%E7%B1%BB/"/>
    
  </entry>
  
</feed>
